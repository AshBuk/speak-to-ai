--- libdbusmenu-16.04.0-orig/configure.ac	2025-07-06 16:39:17.199040778 +0300
+++ libdbusmenu-16.04.0/configure.ac	2025-07-06 16:39:29.759903170 +0300
@@ -119,10 +119,11 @@
                                   gio-unix-2.0  >= $GIO_UNIX_REQUIRED_VERSION,
                                   [have_tests=yes]
 )
-PKG_CHECK_MODULES(DBUSMENUTESTSVALGRIND, valgrind, have_valgrind=yes, have_valgrind=no)
-AM_CONDITIONAL([HAVE_VALGRIND], [test "x$have_valgrind" = "xyes"])
 ])
 
+# Valgrind is not needed for production builds, always set to no
+AM_CONDITIONAL([HAVE_VALGRIND], [false])
+
 AC_SUBST(DBUSMENUTESTS_CFLAGS)
 AC_SUBST(DBUSMENUTESTS_LIBS)
 
--- libdbusmenu-16.04.0-orig/tests/Makefile.am	2025-07-06 16:39:17.198213365 +0300
+++ libdbusmenu-16.04.0/tests/Makefile.am	2025-07-06 16:40:14.887304252 +0300
@@ -15,12 +15,10 @@
 	test-glib-submenu
 
 if WANT_DBUSMENUDUMPER
-if HAVE_VALGRIND
-TESTS += \
-	test-json
-# Hangs see https://bugs.launchpad.net/ubuntu/+source/libdbusmenu/+bug/1429291
-#	test-json-instruction
-endif
+# Valgrind tests are disabled for production builds
+# if HAVE_VALGRIND
+# TESTS += test-json
+# endif
 endif
 
 if WANT_LIBDBUSMENUGTK
@@ -72,11 +70,10 @@
 	test-glib-simple-items
 
 if WANT_DBUSMENUDUMPER
-if HAVE_VALGRIND
-check_PROGRAMS += \
-	test-json-client \
-	test-json-server
-endif
+# Valgrind programs are disabled for production builds
+# if HAVE_VALGRIND
+# check_PROGRAMS += test-json-client test-json-server
+# endif
 endif
 
 if WANT_LIBDBUSMENUGTK
--- libdbusmenu-16.04.0-orig/libdbusmenu-glib/defaults.c	2025-07-06 16:39:17.199040778 +0300
+++ libdbusmenu-16.04.0/libdbusmenu-glib/defaults.c	2025-07-06 16:39:29.759903170 +0300
@@ -46,8 +46,8 @@
 	GVariant * value;
 };
 
-#define DBUSMENU_DEFAULTS_GET_PRIVATE(o) \
-(G_TYPE_INSTANCE_GET_PRIVATE ((o), DBUSMENU_TYPE_DEFAULTS, DbusmenuDefaultsPrivate))
+#define DBUSMENU_DEFAULTS_GET_PRIVATE(o) \
+(dbusmenu_defaults_get_instance_private (o))
 
 static void dbusmenu_defaults_class_init (DbusmenuDefaultsClass *klass);
 static void dbusmenu_defaults_init       (DbusmenuDefaults *self);
@@ -58,7 +58,7 @@
 static DefaultEntry * entry_create (const GVariantType * type, GVariant * variant);
 static void entry_destroy (gpointer entry);
 
-G_DEFINE_TYPE (DbusmenuDefaults, dbusmenu_defaults, G_TYPE_OBJECT);
+G_DEFINE_TYPE_WITH_PRIVATE (DbusmenuDefaults, dbusmenu_defaults, G_TYPE_OBJECT);
 
 static void
 dbusmenu_defaults_class_init (DbusmenuDefaultsClass *klass)
 @@ -66,8 +66,6 @@
 	GObjectClass *object_class = G_OBJECT_CLASS (klass);
 
-	g_type_class_add_private (klass, sizeof (DbusmenuDefaultsPrivate));
-
 	object_class->dispose = dbusmenu_defaults_dispose;
 	object_class->finalize = dbusmenu_defaults_finalize;
 	return;
