{
    "app-id": "io.github.ashbuk.speak-to-ai",
    "runtime": "org.freedesktop.Platform",
    "runtime-version": "23.08",
    "sdk": "org.freedesktop.Sdk",
    "sdk-extensions": [
        "org.freedesktop.Sdk.Extension.golang"
    ],
    "command": "flatpak-runtime.sh",
    "finish-args": [
        "--share=ipc",
        "--socket=x11",
        "--socket=wayland",
        "--socket=pulseaudio",
        "--device=dri",
        "--filesystem=xdg-config/speak-to-ai:create",
        "--talk-name=org.freedesktop.Notifications",
        "--talk-name=org.kde.StatusNotifierWatcher",
        "--talk-name=org.ayatana.indicator.application",
        "--talk-name=org.ayatana.indicator.sound",
        "--talk-name=org.ayatana.indicator.messages",
        "--talk-name=org.ayatana.indicator.power",
        "--talk-name=org.ayatana.indicator.datetime",
        "--talk-name=org.ayatana.indicator.session",
        "--talk-name=org.ayatana.indicator.bluetooth",
        "--talk-name=org.ayatana.indicator.network",
        "--talk-name=org.ayatana.indicator.keyboard",
        "--talk-name=org.ayatana.indicator.printers",
        "--talk-name=org.ayatana.indicator.location",
        "--system-talk-name=org.freedesktop.UPower",
        "--own-name=org.mpris.MediaPlayer2.speak-to-ai",
        "--talk-name=org.gnome.Shell",
        "--talk-name=org.kde.kglobalaccel",
        "--talk-name=org.freedesktop.portal.Desktop"
    ],
    "build-options": {
        "append-path": "/usr/lib/sdk/golang/bin",
        "env": {
            "GOBIN": "/app/bin",
            "GOROOT": "/usr/lib/sdk/golang",
            "PKG_CONFIG_PATH": "/app/lib/pkgconfig:/app/share/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig"
        },
        "build-args": [
            "--share=network"
        ]
    },
    "modules": [
        {
            "name": "libdbusmenu-gtk3",
            "buildsystem": "autotools",
            "config-opts": [
                "--disable-tests",
                "--disable-gtk-doc",
                "--with-gtk=3"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://launchpad.net/libdbusmenu/16.04/16.04.0/+download/libdbusmenu-16.04.0.tar.gz",
                    "sha256": "b9cc4a2acd74509435892823607d966d424bd9ad5d0b00938f27240a1bfa878a"
                }
            ]
        },
        {
            "name": "libayatana-appindicator",
            "buildsystem": "cmake-ninja",
            "builddir": true,
            "config-opts": [
                "-DENABLE_TESTS=OFF",
                "-DENABLE_GTK_DOC=OFF",
                "-DENABLE_INTROSPECTION=OFF"
            ],
            "sources": [
                {
                    "type": "git",
                    "url": "https://github.com/AyatanaIndicators/libayatana-appindicator.git",
                    "branch": "main"
                }
            ]
        },
        {
            "name": "alsa-utils",
            "buildsystem": "autotools",
            "config-opts": [
                "--disable-alsaconf",
                "--disable-xmlto",
                "--disable-nls",
                "--with-udev-rules-dir=/app/share/udev/rules.d"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://www.alsa-project.org/files/pub/utils/alsa-utils-1.2.12.tar.bz2",
                    "sha256": "98bc6677d0c0074006679051822324a0ab0879aea558a8f68b511780d30cd924"
                }
            ]
        },
        {
            "name": "xdotool",
            "buildsystem": "simple",
            "build-commands": [
                "make PREFIX=/app",
                "make PREFIX=/app install"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://github.com/jordansissel/xdotool/archive/refs/tags/v3.20211022.1.tar.gz",
                    "sha256": "82b15a944a5e82fee15e0f6116bd9f642bc3d0bb6989fc0ca5ad9dfe35de0847"
                }
            ]
        },
        {
            "name": "wayland-protocols",
            "buildsystem": "meson",
            "sources": [
                {
                    "type": "archive",
                    "url": "https://gitlab.freedesktop.org/wayland/wayland-protocols/-/releases/1.36/downloads/wayland-protocols-1.36.tar.xz",
                    "sha256": "71fd4de05e79f9a1ca559fac30c1f8365fa10346422f9fe795f74d77b9ef7e92"
                }
            ]
        },
        {
            "name": "wl-clipboard",
            "buildsystem": "meson",
            "config-opts": [
                "-Dfishcompletiondir=/app/share/fish/completions"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://github.com/bugaevc/wl-clipboard/archive/v2.2.1.tar.gz",
                    "sha256": "6eb8081207fb5581d1d82c4bcd9587205a31a3d47bea3ebeb7f41aa1143783eb"
                }
            ]
        },
        {
            "name": "wtype",
            "buildsystem": "meson",
            "sources": [
                {
                    "type": "archive", 
                    "url": "https://github.com/atx/wtype/archive/v0.4.tar.gz",
                    "sha256": "da91786d828b6a6e29b884bc510473939eda052658ebef87d7bdeafa6a8746f9"
                }
            ]
        },
        {
            "name": "speak-to-ai",
            "buildsystem": "simple",
            "build-commands": [
                "# Download base model if not present",
                "if [ ! -f sources/language-models/base.bin ]; then echo 'Downloading base model...'; mkdir -p sources/language-models; cd sources/language-models; wget -q https://huggingface.co/ggml-org/whisper.cpp/resolve/main/ggml-base.bin -O base.bin || curl -L https://huggingface.co/ggml-org/whisper.cpp/resolve/main/ggml-base.bin -o base.bin; cd ../..; fi",
                "# Enable Go SDK and build with Makefile",
                ". /usr/lib/sdk/golang/enable.sh; export GOPROXY=https://proxy.golang.org,direct; export GOSUMDB=sum.golang.org",
                ". /usr/lib/sdk/golang/enable.sh; make build-systray",
                "# Install binaries",
                "install -Dm755 speak-to-ai /app/bin/speak-to-ai",
                "install -Dm755 bash-scripts/flatpak-runtime.sh /app/bin/flatpak-runtime.sh",
                "# Install whisper.cpp binaries from sources/core",
                "if [ -f sources/core/whisper ]; then install -Dm755 sources/core/whisper /app/bin/whisper; fi",
                "if [ -f sources/core/quantize ]; then install -Dm755 sources/core/quantize /app/bin/quantize; fi",
                "# Install whisper libraries",
                "# Install whisper and ggml shared libraries (cover all variants)",
                "for f in lib/libwhisper.so* lib/libggml*.so*; do if [ -f \"$f\" ]; then install -Dm755 \"$f\" \"/app/lib/$(basename \"$f\")\"; fi; done",
                "# Create proper symlink chain for libwhisper to avoid ldconfig warnings",
                "if ls /app/lib/libwhisper.so.*.* >/dev/null 2>&1; then \\",
                "  real=$(ls /app/lib/libwhisper.so.*.* | sort -V | tail -n1); \\",
                "  rm -f /app/lib/libwhisper.so.1 /app/lib/libwhisper.so; \\",
                "  ln -s \"$(basename \"$real\")\" /app/lib/libwhisper.so.1; \\",
                "  ln -s libwhisper.so.1 /app/lib/libwhisper.so; \\",
                "fi",
                "# Install configuration and resources",
                "install -Dm644 config.yaml /app/share/speak-to-ai/config.yaml",
                "install -Dm644 sources/language-models/base.bin /app/share/speak-to-ai/models/base.bin",
                "# Install desktop integration",
                "install -Dm644 icons/io.github.ashbuk.speak-to-ai.svg /app/share/icons/hicolor/scalable/apps/io.github.ashbuk.speak-to-ai.svg",
                "install -Dm644 icons/io.github.ashbuk.speak-to-ai.png /app/share/icons/hicolor/128x128/apps/io.github.ashbuk.speak-to-ai.png",
                "install -Dm644 io.github.ashbuk.speak-to-ai.desktop /app/share/applications/io.github.ashbuk.speak-to-ai.desktop",
                "install -Dm644 io.github.ashbuk.speak-to-ai.appdata.xml /app/share/metainfo/io.github.ashbuk.speak-to-ai.appdata.xml"
            ],
            "sources": [
                {
                    "type": "dir",
                    "path": "."
                }
            ]
        }
    ]
} 