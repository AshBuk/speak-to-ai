{
    "app-id": "io.github.ashbuk.speak-to-ai",
    "runtime": "org.gnome.Platform",
    "runtime-version": "47",
    "sdk": "org.gnome.Sdk",
    "sdk-extensions": [
        "org.freedesktop.Sdk.Extension.golang",
        "org.freedesktop.Sdk.Extension.vala"
    ],
    "command": "flatpak-runtime.sh",
    "finish-args": [
        "--share=ipc",
        "--socket=x11",
        "--socket=wayland",
        "--socket=pulseaudio",
        "--device=dri",
        "--filesystem=xdg-config/speak-to-ai:create",
        "--talk-name=org.freedesktop.Notifications",
        "--talk-name=org.kde.StatusNotifierWatcher",
        "--talk-name=org.ayatana.indicator.application",
        "--talk-name=org.ayatana.indicator.sound",
        "--talk-name=org.ayatana.indicator.messages",
        "--talk-name=org.ayatana.indicator.power",
        "--talk-name=org.ayatana.indicator.datetime",
        "--talk-name=org.ayatana.indicator.session",
        "--talk-name=org.ayatana.indicator.bluetooth",
        "--talk-name=org.ayatana.indicator.network",
        "--talk-name=org.ayatana.indicator.keyboard",
        "--talk-name=org.ayatana.indicator.printers",
        "--talk-name=org.ayatana.indicator.location",
        "--system-talk-name=org.freedesktop.UPower",
        "--own-name=org.mpris.MediaPlayer2.speak-to-ai",
        "--talk-name=org.gnome.Shell",
        "--talk-name=org.kde.kglobalaccel",
        "--talk-name=org.freedesktop.portal.Desktop"
    ],
    "build-options": {
        "append-path": "/app/share/gnome-common:/app/bin:/usr/lib/sdk/golang/bin:/usr/lib/sdk/vala/bin",
        "env": {
            "GOBIN": "/app/bin",
            "GOROOT": "/usr/lib/sdk/golang",
            "VALA": "/usr/lib/sdk/vala/bin/valac",
                "PKG_CONFIG_PATH": "/app/lib/pkgconfig:/app/lib64/pkgconfig:/app/lib/x86_64-linux-gnu/pkgconfig:/app/lib/aarch64-linux-gnu/pkgconfig:/app/share/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig",
            "ACLOCAL_PATH": "/app/share/aclocal:/usr/share/aclocal"
        },
        "build-args": [
            "--share=network"
        ]
    },
    "modules": [
        {
            "name": "intltool",
            "buildsystem": "autotools",
            "cleanup": ["/share/man", "/share/doc", "/share/gtk-doc"],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://launchpad.net/intltool/trunk/0.51.0/+download/intltool-0.51.0.tar.gz",
                    "sha256": "67c74d94196b153b774ab9f89b2fa6c6ba79352407037c8c14d5aeb334e959cd"
                }
            ]
        },
        {
            "name": "gnome-common",
            "buildsystem": "autotools",
            "cleanup": ["/share/man", "/share/doc", "/share/gtk-doc"],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://download.gnome.org/sources/gnome-common/3.18/gnome-common-3.18.0.tar.xz",
                    "sha256": "22569e370ae755e04527b76328befc4c73b62bfd4a572499fde116b8318af8cf"
                }
            ]
        },
        {
            "name": "libdbusmenu-gtk3",
            "buildsystem": "autotools",
            "build-options": {
                "env": {
                    "CFLAGS": "-Wno-error -Wno-error=deprecated-declarations",
                    "CPPFLAGS": "-Wno-error -Wno-error=deprecated-declarations"
                }
            },
            "post-install": [
                "true"
            ],
            "config-opts": [
                "--disable-gtk-doc",
                "--disable-introspection",
                "--disable-vala",
                "--disable-valgrind",
                "--disable-dumper",
                "--with-gtk=3"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/libdbusmenu/16.04.1+18.10.20180917-0ubuntu8/libdbusmenu_16.04.1+18.10.20180917.orig.tar.gz",
                    "sha256": "9be5dc0f2657a9eb76b02d2cdfafa4490652c70bcdfafba5574c505afd2bbe79"
                }
            ]
        },
        {
            "name": "ayatana-ido",
            "buildsystem": "cmake-ninja",
            "builddir": true,
            "config-opts": [
                "-DCMAKE_BUILD_TYPE=Release",
                "-DENABLE_TESTS=OFF",
                "-DENABLE_GTK_DOC=OFF",
                "-DENABLE_INTROSPECTION=OFF",
                "-DCMAKE_INSTALL_LIBDIR=lib"
            ],
            "post-install": [
                "bash -lc 'if [ -f /app/lib/pkgconfig/ayatana-ido3-0.4.pc ] && [ ! -f /app/lib/pkgconfig/libayatana-ido3-0.4.pc ]; then ln -s ayatana-ido3-0.4.pc /app/lib/pkgconfig/libayatana-ido3-0.4.pc; fi'"
            ],
            "sources": [
                {
                    "type": "git",
                    "url": "https://github.com/AyatanaIndicators/ayatana-ido.git",
                    "tag": "0.9.3"
                }
            ]
        },
        {
            "name": "libayatana-indicator",
            "buildsystem": "cmake-ninja",
            "builddir": true,
            "config-opts": [
                "-DCMAKE_BUILD_TYPE=Release",
                "-DCMAKE_INSTALL_LIBDIR=lib",
                "-DCMAKE_PREFIX_PATH=/app"
            ],
            "sources": [
                {
                    "type": "git",
                    "url": "https://github.com/AyatanaIndicators/libayatana-indicator.git",
                    "branch": "main"
                }
            ]
        },
        {
            "name": "libayatana-appindicator",
            "buildsystem": "cmake-ninja",
            "builddir": true,
            "post-extract": [
                "sed -i 's/^\\s*add_subdirectory(\\s*docs\\s*)/## disabled docs by flatpak manifest/' CMakeLists.txt",
                "sed -i 's/^\\s*add_subdirectory(\\s*doc\\s*)/## disabled docs by flatpak manifest/' CMakeLists.txt"
            ],
            "build-options": {
                "env": {
                    "LDFLAGS": "-L/app/lib",
                    "LD_LIBRARY_PATH": "/app/lib:$LD_LIBRARY_PATH",
                    "LIBRARY_PATH": "/app/lib:$LIBRARY_PATH",
                    "CMAKE_LIBRARY_PATH": "/app/lib:$CMAKE_LIBRARY_PATH"
                }
            },
            "config-opts": [
                "-DENABLE_TESTS=OFF",
                "-DENABLE_GTK_DOC=OFF",
                "-DENABLE_INTROSPECTION=OFF",
                "-DENABLE_BINDINGS=OFF",
                "-DENABLE_BINDINGS_MONO=OFF",
                "-DGTK_DOC=OFF",
                "-DWITH_GTK_DOC=OFF",
                "-DENABLE_DOC=OFF",
                "-DGTK_DOC_USE_LIBTOOL=OFF",
                "-DCMAKE_EXE_LINKER_FLAGS=-L/app/lib",
                "-DCMAKE_SHARED_LINKER_FLAGS=-L/app/lib",
                "-DCMAKE_PREFIX_PATH=/app",
                "-DCMAKE_DISABLE_FIND_PACKAGE_GTKDoc=ON",
                "-DCMAKE_DISABLE_FIND_PACKAGE_GTKDOC=ON",
                "-DBUILD_DOC=OFF",
                "-DBUILD_DOCUMENTATION=OFF"
            ],
            "sources": [
                {
                    "type": "git",
                    "url": "https://github.com/AyatanaIndicators/libayatana-appindicator.git",
                    "branch": "main"
                }
            ]
        },
        {
            "name": "xclip",
            "buildsystem": "autotools",
            "config-opts": [
                "--disable-man"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://github.com/astrand/xclip/archive/refs/tags/0.13.tar.gz",
                    "sha256": "ca5b8804e3c910a66423a882d79bf3c9450b875ac8528791fb60ec9de667f758"
                }
            ]
        },
        {
            "name": "ffmpeg",
            "buildsystem": "simple",
            "build-commands": [
                "./configure --prefix=/app --disable-doc --disable-static --enable-shared --disable-everything --enable-avdevice --enable-avformat --enable-avcodec --enable-swresample --enable-demuxer=alsa --enable-protocol=file",
                "make -j ${FLATPAK_BUILDER_N_JOBS:-1}",
                "make install"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://ffmpeg.org/releases/ffmpeg-8.0.tar.bz2",
                    "sha256": "3e74acc48ddb9f5f70b6747d3f439d51e7cc5497f097d58e5975c84488f4d186"
                }
            ]
        },
        {
            "name": "alsa-utils",
            "buildsystem": "autotools",
            "config-opts": [
                "--disable-alsaconf",
                "--disable-xmlto",
                "--disable-nls",
                "--with-udev-rules-dir=/app/share/udev/rules.d",
                "--with-systemdsystemunitdir=/app/lib/systemd/system"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://www.alsa-project.org/files/pub/utils/alsa-utils-1.2.12.tar.bz2",
                    "sha256": "98bc6677d0c0074006679051822324a0ab0879aea558a8f68b511780d30cd924"
                }
            ]
        },
        {
            "name": "xdotool",
            "buildsystem": "simple",
            "build-commands": [
                "make PREFIX=/app",
                "make PREFIX=/app install"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://github.com/jordansissel/xdotool/archive/refs/tags/v3.20211022.1.tar.gz",
                    "sha256": "82b15a944a5e82fee15e0f6116bd9f642bc3d0bb6989fc0ca5ad9dfe35de0847"
                }
            ]
        },
        {
            "name": "wayland-protocols",
            "buildsystem": "meson",
            "sources": [
                {
                    "type": "archive",
                    "url": "https://gitlab.freedesktop.org/wayland/wayland-protocols/-/releases/1.36/downloads/wayland-protocols-1.36.tar.xz",
                    "sha256": "71fd4de05e79f9a1ca559fac30c1f8365fa10346422f9fe795f74d77b9ef7e92"
                }
            ]
        },
        {
            "name": "wl-clipboard",
            "buildsystem": "meson",
            "config-opts": [
                "-Dfishcompletiondir=/app/share/fish/completions"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://github.com/bugaevc/wl-clipboard/archive/v2.2.1.tar.gz",
                    "sha256": "6eb8081207fb5581d1d82c4bcd9587205a31a3d47bea3ebeb7f41aa1143783eb"
                }
            ]
        },
        {
            "name": "wtype",
            "buildsystem": "meson",
            "sources": [
                {
                    "type": "archive", 
                    "url": "https://github.com/atx/wtype/archive/v0.4.tar.gz",
                    "sha256": "da91786d828b6a6e29b884bc510473939eda052658ebef87d7bdeafa6a8746f9"
                }
            ]
        },
        {
            "name": "ydotool",
            "buildsystem": "cmake-ninja",
            "config-opts": [
                "-DCMAKE_BUILD_TYPE=Release"
            ],
            "sources": [
                {
                    "type": "archive",
                    "url": "https://github.com/ReimuNotMoe/ydotool/archive/refs/tags/v1.0.4.tar.gz",
                    "sha256": "ba075a43aa6ead51940e892ecffa4d0b8b40c241e4e2bc4bd9bd26b61fde23bd"
                }
            ]
        },
        {
            "name": "speak-to-ai",
            "buildsystem": "simple",
            "build-commands": [
                "# Download small-q5_1 model if not present",
                "if [ ! -f sources/language-models/small-q5_1.bin ]; then echo 'Downloading small-q5_1 model...'; mkdir -p sources/language-models; cd sources/language-models; wget -q https://huggingface.co/ggml-org/whisper.cpp/resolve/main/ggml-small-q5_1.bin -O small-q5_1.bin || curl -L https://huggingface.co/ggml-org/whisper.cpp/resolve/main/ggml-small-q5_1.bin -o small-q5_1.bin; cd ../..; fi",
                "# Enable Go SDK and build with Makefile",
                ". /usr/lib/sdk/golang/enable.sh; export GOPROXY=https://proxy.golang.org,direct; export GOSUMDB=sum.golang.org",
                ". /usr/lib/sdk/golang/enable.sh; make build-systray",
                "# Install binaries",
                "install -Dm755 speak-to-ai /app/bin/speak-to-ai",
                "install -Dm755 bash-scripts/flatpak-runtime.sh /app/bin/flatpak-runtime.sh",
                "# Install whisper.cpp binaries from sources/core",
                "if [ -f sources/core/whisper ]; then install -Dm755 sources/core/whisper /app/bin/whisper; fi",
                "# Install whisper libraries",
                "# Install whisper and ggml shared libraries (cover all variants)",
                "for f in lib/libwhisper.so* lib/libggml*.so*; do if [ -f \"$f\" ]; then install -Dm755 \"$f\" \"/app/lib/$(basename \"$f\")\"; fi; done",
                "# Create proper symlink chain for libwhisper to avoid ldconfig warnings",
                "if ls /app/lib/libwhisper.so.*.* >/dev/null 2>&1; then real=$(ls /app/lib/libwhisper.so.*.* | sort -V | tail -n1); rm -f /app/lib/libwhisper.so.1 /app/lib/libwhisper.so; ln -s \"$(basename \"$real\")\" /app/lib/libwhisper.so.1; ln -s libwhisper.so.1 /app/lib/libwhisper.so; fi",
                "# Install configuration and resources",
                "install -Dm644 config.yaml /app/share/speak-to-ai/config.yaml",
                "install -Dm644 sources/language-models/small-q5_1.bin /app/share/speak-to-ai/models/small-q5_1.bin",
                "# Install desktop integration",
                "install -Dm644 icons/io.github.ashbuk.speak-to-ai.svg /app/share/icons/hicolor/scalable/apps/io.github.ashbuk.speak-to-ai.svg",
                "install -Dm644 icons/io.github.ashbuk.speak-to-ai.png /app/share/icons/hicolor/128x128/apps/io.github.ashbuk.speak-to-ai.png",
                "install -Dm644 io.github.ashbuk.speak-to-ai.desktop /app/share/applications/io.github.ashbuk.speak-to-ai.desktop",
                "install -Dm644 io.github.ashbuk.speak-to-ai.appdata.xml /app/share/metainfo/io.github.ashbuk.speak-to-ai.appdata.xml"
            ],
            "sources": [
                {
                    "type": "dir",
                    "path": "."
                }
            ]
        }
    ]
} 