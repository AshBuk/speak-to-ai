# Lean Flatpak builder - downloads runtimes at build time, not in image
FROM ubuntu:24.04 AS builder

# Avoid timezone interaction
ENV DEBIAN_FRONTEND=noninteractive

# Install minimal system dependencies in one layer
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    wget \
    git \
    build-essential \
    cmake \
    pkg-config \
    flatpak \
    flatpak-builder \
    appstream-glib \
    appstream-compose \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install additional GUI and system libraries
RUN apt-get update && apt-get install -y \
    libayatana-appindicator3-dev \
    libgtk-3-dev \
    libglib2.0-dev \
    libdbus-1-dev \
    ffmpeg \
    alsa-utils \
    file \
    desktop-file-utils \
    xsel \
    wl-clipboard \
    xdotool \
    ydotool \
    libnotify-bin \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install Go efficiently
ENV GO_VERSION=1.24.1
RUN curl -fsSL "https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz" | \
    tar -C /usr/local -xzf -
ENV PATH="/usr/local/go/bin:$PATH"

# Add Flathub repository (but don't install runtimes yet)
RUN flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

# Whisper.cpp version pin for reproducible builds
ARG WHISPER_CPP_REF=v1.7.6
ENV WHISPER_CPP_REF=${WHISPER_CPP_REF}

# Set working directory and create structure
WORKDIR /app
RUN mkdir -p lib sources build dist/flatpak

# Copy project sources
COPY . .

# Copy build script
COPY bash-scripts/build-flatpak.sh /usr/local/bin/build-flatpak.sh
RUN chmod +x /usr/local/bin/build-flatpak.sh

# Set environment variables for CGO
ENV CGO_ENABLED=1 \
    C_INCLUDE_PATH="/app/lib" \
    LIBRARY_PATH="/app/lib" \
    CGO_CFLAGS="-I/app/lib" \
    CGO_LDFLAGS="-L/app/lib -lwhisper -lggml-cpu -lggml" \
    LD_LIBRARY_PATH="/app/lib" \
    PKG_CONFIG_PATH="/app/lib"

# Pre-install Flatpak runtimes/extensions required by manifest
RUN flatpak install -y flathub org.gnome.Platform//47 org.gnome.Sdk//47 \
 && flatpak install -y flathub org.freedesktop.Sdk.Extension.golang//24.08

# Build Flatpak bundle at image build time (script installs deps and bundles)
RUN /usr/local/bin/build-flatpak.sh --build

# Export artifacts stage
FROM scratch AS artifacts
COPY --from=builder /app/dist /dist