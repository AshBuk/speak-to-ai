services:
  # Development environment with GUI support
  dev:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: speak-to-ai-dev
    volumes:
      - .:/app
      - go-cache:/go/pkg/mod
      - whisper-libs:/app/lib
      - build-cache:/app/build
    working_dir: /app
    environment:
      - CGO_ENABLED=1
      - C_INCLUDE_PATH=/app/lib
      - LIBRARY_PATH=/app/lib
      - CGO_CFLAGS=-I/app/lib
      - CGO_LDFLAGS=-L/app/lib -lwhisper -lggml-cpu -lggml
      - LD_LIBRARY_PATH=/app/lib
      - PKG_CONFIG_PATH=/app/lib
    stdin_open: true
    tty: true
    profiles: ["dev"]

  # Linting service
  lint:
    build:
      context: .
      dockerfile: docker/Dockerfile.lint
    container_name: speak-to-ai-lint
    volumes:
      - .:/app:ro
      - go-cache:/go/pkg/mod
    working_dir: /app
    environment:
      - CGO_ENABLED=1
    profiles: ["lint", "ci"]

  # Testing service
  test:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: speak-to-ai-test
    volumes:
      - .:/app:ro
      - go-cache:/go/pkg/mod
      - whisper-libs:/app/lib
      - build-cache:/app/build
    working_dir: /app
    environment:
      - CGO_ENABLED=1
      - C_INCLUDE_PATH=/app/lib
      - LIBRARY_PATH=/app/lib
      - CGO_CFLAGS=-I/app/lib
      - CGO_LDFLAGS=-L/app/lib -lwhisper -lggml-cpu -lggml
      - LD_LIBRARY_PATH=/app/lib
      - PKG_CONFIG_PATH=/app/lib
    command: ["make", "test"]
    profiles: ["test", "ci"]

  # AppImage builder
  build-appimage:
    build:
      context: .
      dockerfile: docker/Dockerfile.appimage
    container_name: speak-to-ai-appimage
    volumes:
      - .:/app
      - go-cache:/go/pkg/mod
      - whisper-libs:/app/lib
      - build-cache:/app/build
      - appimage-dist:/app/dist
    working_dir: /app
    environment:
      - CGO_ENABLED=1
      - C_INCLUDE_PATH=/app/lib
      - LIBRARY_PATH=/app/lib
      - CGO_CFLAGS=-I/app/lib
      - CGO_LDFLAGS=-L/app/lib -lwhisper -lggml-cpu -lggml
      - LD_LIBRARY_PATH=/app/lib
      - PKG_CONFIG_PATH=/app/lib
    profiles: ["build", "appimage"]

  # Flatpak builder
  build-flatpak:
    build:
      context: .
      dockerfile: docker/Dockerfile.flatpak
    container_name: speak-to-ai-flatpak
    volumes:
      - .:/app
      - go-cache:/go/pkg/mod
      - whisper-libs:/app/lib
      - build-cache:/app/build
    working_dir: /app
    environment:
      - CGO_ENABLED=1
      - C_INCLUDE_PATH=/app/lib
      - LIBRARY_PATH=/app/lib
      - CGO_CFLAGS=-I/app/lib
      - CGO_LDFLAGS=-L/app/lib -lwhisper -lggml-cpu -lggml
      - LD_LIBRARY_PATH=/app/lib
      - PKG_CONFIG_PATH=/app/lib
    privileged: true  # Needed for Flatpak
    profiles: ["build", "flatpak"]

  # Whisper.cpp builder (shared service)
  whisper-builder:
    build:
      context: .
      dockerfile: docker/Dockerfile.dev
    container_name: speak-to-ai-whisper-builder
    volumes:
      - whisper-libs:/app/lib
      - build-cache:/app/build
      - .:/app
    working_dir: /app
    command: ["make", "whisper-libs"]
    profiles: ["build", "init"]

volumes:
  # Persistent Go module cache
  go-cache:
    driver: local
  
  # Shared whisper.cpp libraries between services
  whisper-libs:
    driver: local
  
  # Build artifacts cache
  build-cache:
    driver: local

  # AppImage distribution files
  appimage-dist:
    driver: local